buildscript {
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id "com.bmuschko.docker-remote-api" version "6.7.0"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

group = 'com.gelerion.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = '2020.0.3'
}

dependencies {
	implementation('org.springframework.cloud:spring-cloud-starter-eureka-server')

	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.cloud:spring-cloud-config-client')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


//noinspection GroovyAssignabilityCheck
task prepareDocker(type: Copy) {
	from("docker")
	from("${buildDir}/libs") {
		include '**/*.jar'
		rename "registry-(.*)", 'registry-server.jar'
	}

	into "${project.buildDir}/docker"
}

build.finalizedBy prepareDocker

import com.bmuschko.gradle.docker.tasks.image.*

task buildImage(type: DockerBuildImage) {
	dependsOn build
	inputDir = file("${project.buildDir}/docker")
	images.add('registry-server-image:latest')
}