buildscript {
	repositories { jcenter() }
	dependencies {
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

plugins {
	id 'org.springframework.boot' version '1.5.8.RELEASE'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

// This is used as the docker image prefix
group = 'com.gelerion.microservices.gateway'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

ext {
	springCloudVersion = 'Dalston.SR4'
}

jar {
	baseName = 'licensing'
	version = '0.1.0'
}

repositories {
	mavenCentral()
}

configurations {
	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-log4j2')

	//cloud
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-config-client')

	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.cloud:spring-cloud-starter-zuul')

	compile('com.google.guava:guava')
	compile('com.jason-goodwin:better-monads:0.4.0') {
		exclude module: 'scala-library'
	}

	compileOnly('org.projectlombok:lombok')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.2.1'
}

import org.apache.tools.ant.filters.ReplaceTokens
processResources {
    with copySpec {
		from "$projectDir/docker/Dockerfile"
		into "../../docker/"
	}

	filter(ReplaceTokens, tokens: ['jarName': jar.archiveName])
}

task buildDocker(type: Docker, dependsOn: build)  {
	applicationName = jar.baseName
	dockerfile = file('docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into "${stageDir}/target"
		}
	}
}

